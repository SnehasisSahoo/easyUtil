{"ast":null,"code":"import _slicedToArray from\"/Users/snehasis/Documents/MYF/react/easy-util/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import NavBar from\"./NavBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TempConverter(){//   const cInp = (temp) => {\n//     if (isNaN(parseInt(temp.target.value))) {\n//       temp.target.value = null;\n//     }\n//     setTempc(temp.target.value);\n//     setButc(true);\n//     setButf(false);\n//     // temp.target.value = tempc;\n//   };\nvar cInp=function cInp(temp){if(isNaN(parseInt(temp.target.value))){temp.target.value=null;}setTempc(temp.target.value);setTempf(temp.target.value*9/5+32);// temp.target.value = tempc;\n};//   const fInp = (temp) => {\n//     if (isNaN(parseInt(temp.target.value))) {\n//       temp.target.value = null;\n//     }\n//     setTempf(temp.target.value);\n//     setButf(true);\n//     setButc(false);\n//     // temp.target.value = tempf;\n//   };\nvar fInp=function fInp(temp){if(isNaN(parseInt(temp.target.value))){temp.target.value=null;}console.log(temp.target.value);setTempf(temp.target.value);setTempc((temp.target.value-32)*5/9);// temp.target.value = tempf;\n};// const conv = ()=>{\n//     setTempf((tempcin*9/5)+32);\n//     setTempc((tempfin-32)*5/9);\n//     console.log(tempc);\n//     console.log(tempf);\n//     console.log(cInp.value);\n//   const convToC = () => {\n//     setTempc(((tempf - 32) * 5) / 9);\n//   };\n//   const convToF = () => {\n//     setTempf((tempc * 9) / 5 + 32);\n//   };\n// };\n//(0°C × 9/5) + 32 = 32°F\n//(0°F − 32) × 5/9 = -17.78°C\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),tempc=_useState2[0],setTempc=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),tempf=_useState4[0],setTempf=_useState4[1];//   const [butc, setButc] = useState(false);\n//   const [butf, setButf] = useState(false);\n// const [tempcin, setTempcin] = useState(0);\n// const [tempfin, setTempfin] = useState(32);\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{tab:\"temp\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"center-alng\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"TEMPERATURE CONVERSION\"}),/*#__PURE__*/_jsx(\"form\",{className:\"tempForm\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",inputMode:\"numeric\",name:\"tempc\",value:tempc,id:\"tempc\",onChange:cInp,placeholder:\"temperature in degree centigrate\"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tempc\",children:\" \\xB0 C\"})})})]})}),/*#__PURE__*/_jsx(\"form\",{className:\"tempForm\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",name:\"tempf\",value:tempf,id:\"tempf\",onChange:fInp,placeholder:\"temperature in degree centigrate\"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"label\",{htmlFor:\"tempf\",children:\" \\xB0 F\"})})})]})})]})]});}","map":{"version":3,"names":["React","useState","NavBar","TempConverter","cInp","temp","isNaN","parseInt","target","value","setTempc","setTempf","fInp","console","log","tempc","tempf"],"sources":["/Users/snehasis/Documents/MYF/react/easy-util/src/components/TempConverter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\n\n\nexport default function TempConverter() {\n//   const cInp = (temp) => {\n//     if (isNaN(parseInt(temp.target.value))) {\n//       temp.target.value = null;\n//     }\n//     setTempc(temp.target.value);\n//     setButc(true);\n//     setButf(false);\n//     // temp.target.value = tempc;\n//   };\n  const cInp = (temp) => {\n    if (isNaN(parseInt(temp.target.value))) {\n      temp.target.value = null;\n    }\n    setTempc(temp.target.value);\n    setTempf((temp.target.value * 9) / 5 + 32);\n    // temp.target.value = tempc;\n  };\n\n//   const fInp = (temp) => {\n//     if (isNaN(parseInt(temp.target.value))) {\n//       temp.target.value = null;\n//     }\n//     setTempf(temp.target.value);\n//     setButf(true);\n//     setButc(false);\n//     // temp.target.value = tempf;\n//   };\n  const fInp = (temp) => {\n    if (isNaN(parseInt(temp.target.value))) {\n      temp.target.value = null;\n    }\n    console.log(temp.target.value)\n    setTempf(temp.target.value);\n    setTempc(((temp.target.value - 32) * 5) / 9);\n    // temp.target.value = tempf;\n  };\n\n  // const conv = ()=>{\n  //     setTempf((tempcin*9/5)+32);\n  //     setTempc((tempfin-32)*5/9);\n  //     console.log(tempc);\n  //     console.log(tempf);\n  //     console.log(cInp.value);\n\n//   const convToC = () => {\n//     setTempc(((tempf - 32) * 5) / 9);\n//   };\n\n//   const convToF = () => {\n//     setTempf((tempc * 9) / 5 + 32);\n//   };\n\n  // };\n\n  //(0°C × 9/5) + 32 = 32°F\n  //(0°F − 32) × 5/9 = -17.78°C\n\n  const [tempc, setTempc] = useState('');\n  const [tempf, setTempf] = useState('');\n\n//   const [butc, setButc] = useState(false);\n//   const [butf, setButf] = useState(false);\n  // const [tempcin, setTempcin] = useState(0);\n  // const [tempfin, setTempfin] = useState(32);\n\n  return (\n    <>\n      <NavBar tab=\"temp\"/>\n      <div className=\"center-alng\">\n        <h2>TEMPERATURE CONVERSION</h2>\n\n        <form className=\"tempForm\">\n          <div>\n            <input\n              className=\"input\"\n              type=\"text\"\n              inputMode=\"numeric\"\n              name=\"tempc\"\n              value={tempc}\n              id=\"tempc\"\n              onChange={cInp}\n              placeholder=\"temperature in degree centigrate\"\n            />\n            <span>\n              <b>\n                <label htmlFor=\"tempc\"> &#176; C</label>\n              </b>\n            </span>\n          </div>\n        </form>\n        {/* <div>\n          <button className=\"buttont\" onClick={convToF} disabled={butf}>\n            <b> CONVERT to °F &darr; </b>\n          </button>\n          <button className=\"buttont\" onClick={convToC} disabled={butc}>\n            <b> CONVERT to °C &uarr; </b>\n          </button>\n        </div> */}\n        <form className=\"tempForm\">\n          <div>\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"tempf\"\n              value={tempf}\n              id=\"tempf\"\n              onChange={fInp}\n              placeholder=\"temperature in degree centigrate\"\n            />\n            <span>\n              <b>\n                <label htmlFor=\"tempf\"> &#176; F</label>\n              </b>\n            </span>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n"],"mappings":"mIAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,OAAM,KAAM,UAAU,CAAC,6IAG9B,cAAe,SAASC,cAAa,EAAG,CACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,GAAMC,KAAI,CAAG,QAAPA,KAAI,CAAIC,IAAI,CAAK,CACrB,GAAIC,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,CACtCJ,IAAI,CAACG,MAAM,CAACC,KAAK,CAAG,IAAI,CAC1B,CACAC,QAAQ,CAACL,IAAI,CAACG,MAAM,CAACC,KAAK,CAAC,CAC3BE,QAAQ,CAAEN,IAAI,CAACG,MAAM,CAACC,KAAK,CAAG,CAAC,CAAI,CAAC,CAAG,EAAE,CAAC,CAC1C;AACF,CAAC,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,GAAMG,KAAI,CAAG,QAAPA,KAAI,CAAIP,IAAI,CAAK,CACrB,GAAIC,KAAK,CAACC,QAAQ,CAACF,IAAI,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,CACtCJ,IAAI,CAACG,MAAM,CAACC,KAAK,CAAG,IAAI,CAC1B,CACAI,OAAO,CAACC,GAAG,CAACT,IAAI,CAACG,MAAM,CAACC,KAAK,CAAC,CAC9BE,QAAQ,CAACN,IAAI,CAACG,MAAM,CAACC,KAAK,CAAC,CAC3BC,QAAQ,CAAE,CAACL,IAAI,CAACG,MAAM,CAACC,KAAK,CAAG,EAAE,EAAI,CAAC,CAAI,CAAC,CAAC,CAC5C;AACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AAEA;AACA;AACA;AAEE;AAEA;AACA;AAEA,cAA0BR,QAAQ,CAAC,EAAE,CAAC,wCAA/Bc,KAAK,eAAEL,QAAQ,eACtB,eAA0BT,QAAQ,CAAC,EAAE,CAAC,yCAA/Be,KAAK,eAAEL,QAAQ,eAExB;AACA;AACE;AACA;AAEA,mBACE,wCACE,KAAC,MAAM,EAAC,GAAG,CAAC,MAAM,EAAE,cACpB,aAAK,SAAS,CAAC,aAAa,wBAC1B,oBAAI,wBAAsB,EAAK,cAE/B,aAAM,SAAS,CAAC,UAAU,uBACxB,oCACE,cACE,SAAS,CAAC,OAAO,CACjB,IAAI,CAAC,MAAM,CACX,SAAS,CAAC,SAAS,CACnB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAEI,KAAM,CACb,EAAE,CAAC,OAAO,CACV,QAAQ,CAAEX,IAAK,CACf,WAAW,CAAC,kCAAkC,EAC9C,cACF,mCACE,gCACE,cAAO,OAAO,CAAC,OAAO,UAAC,SAAS,EAAQ,EACtC,EACC,GACH,EACD,cASP,aAAM,SAAS,CAAC,UAAU,uBACxB,oCACE,cACE,SAAS,CAAC,OAAO,CACjB,IAAI,CAAC,MAAM,CACX,IAAI,CAAC,OAAO,CACZ,KAAK,CAAEY,KAAM,CACb,EAAE,CAAC,OAAO,CACV,QAAQ,CAAEJ,IAAK,CACf,WAAW,CAAC,kCAAkC,EAC9C,cACF,mCACE,gCACE,cAAO,OAAO,CAAC,OAAO,UAAC,SAAS,EAAQ,EACtC,EACC,GACH,EACD,GACH,GACL,CAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}