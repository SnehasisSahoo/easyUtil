{"ast":null,"code":"import _regeneratorRuntime from\"/Users/snehasis/Documents/MYF/react/easy-util/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/snehasis/Documents/MYF/react/easy-util/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/snehasis/Documents/MYF/react/easy-util/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import NavBar from\"./NavBar\";import axios from\"axios\";// let cityName='Delhi';\n// let countryCode='IN';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function HomePage(){//INFO: set greetings\nvar h=new Date().getHours();var greetings=function greetings(){var greet=\"\";if(h<12)greet=\"Good Morning!\";else if(h>=12&&h<=17)greet=\"Good Afternoon!\";else if(h>=17&&h<=24)greet=\"Good Evening!\";return greet;};//INFO: clock\nvar _useState=useState(new Date().toLocaleTimeString(\"en-US\")),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var updateTime=function updateTime(){setTime(new Date().toLocaleTimeString(\"en-US\"));};setInterval(updateTime,1000);//INFO: get lat long\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),lat=_useState4[0],setLat=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),lon=_useState6[0],setLon=_useState6[1];var locSucess=function locSucess(pos){setLat(pos.coords.latitude);setLon(pos.coords.longitude);// console.log(pos);\n};var locErr=function locErr(err){console.warn(\"ERROR(\".concat(err.code,\"): \").concat(err.message));};var opp={enableHighAccuracy:true,timeout:5000,maximumAge:0};navigator.geolocation.getCurrentPosition(locSucess,locErr,opp);//INFO: get loc[cityName countryCode]\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),cityName=_useState8[0],setCityName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),countryCode=_useState10[0],setCountryCode=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),cityCountryErr=_useState12[0],setCityCountryErr=_useState12[1];var bdcApi=\"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=\".concat(lat,\"&longitude=\").concat(lon);var getCityCountry=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(bdcApi);case 3:res=_context.sent;console.log(res.data);return _context.abrupt(\"return\",res.data);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);setCityCountryErr(_context.t0.message);console.log(cityCountryErr);case 12:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function getCityCountry(){return _ref.apply(this,arguments);};}();//INFO: get weather data\nvar apiKey=\"44f8f3e9badd63673a1dc623c416a439\";// const URL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\nvar _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),weather=_useState14[0],setWeather=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),weatherErr=_useState16[0],setWeatherErr=_useState16[1];var getWeather=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var location,URL,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getCityCountry();case 3:location=_context2.sent;setCityName(location.city);setCountryCode(location.countryCode);URL=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(location.city,\",\").concat(location.countryCode,\"&appid=\").concat(apiKey,\"&units=metric\");_context2.next=9;return axios.get(URL);case 9:res=_context2.sent;setWeather(res.data);console.log(res.data);_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);setWeatherErr(_context2.t0.message);console.log(weatherErr);case 18:case\"end\":return _context2.stop();}},_callee2,null,[[0,14]]);}));return function getWeather(){return _ref2.apply(this,arguments);};}();useEffect(function(){getWeather();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[h]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavBar,{tab:\"home\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"center-alng\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"greet\",children:greetings()}),/*#__PURE__*/_jsx(\"h3\",{children:\"[  \".concat(time,\"  ]\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"city\",children:[\"Weather in \",cityName,\", \",countryCode]}),weather.main!==undefined&&/*#__PURE__*/_jsxs(\"h1\",{className:\"temp\",children:[weather.main.temp,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[weather.weather!==undefined&&/*#__PURE__*/_jsx(\"img\",{src:\"https://openweathermap.org/img/wn/\".concat(weather.weather[0].icon,\".png\"),alt:\"\",className:\"icon\"}),weather.weather!==undefined&&/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:weather.weather[0].description})]}),weather.main!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"extra\",children:[\"Humidity: \",weather.main.humidity,\"%\"]}),weather.wind!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"extra\",children:[\"Wind speed: \",weather.wind.speed,\" km/h\"]})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","NavBar","axios","HomePage","h","Date","getHours","greetings","greet","toLocaleTimeString","time","setTime","updateTime","setInterval","lat","setLat","lon","setLon","locSucess","pos","coords","latitude","longitude","locErr","err","console","warn","code","message","opp","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","getCurrentPosition","cityName","setCityName","countryCode","setCountryCode","cityCountryErr","setCityCountryErr","bdcApi","getCityCountry","get","res","log","data","apiKey","weather","setWeather","weatherErr","setWeatherErr","getWeather","location","city","URL","main","undefined","temp","icon","description","humidity","wind","speed"],"sources":["/Users/snehasis/Documents/MYF/react/easy-util/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\n\n// let cityName='Delhi';\n// let countryCode='IN';\n\nexport default function HomePage() {\n  //INFO: set greetings\n  let h = new Date().getHours();\n  let greetings = () => {\n    let greet = \"\";\n    if (h < 12) greet = \"Good Morning!\";\n    else if (h >= 12 && h <= 17) greet = \"Good Afternoon!\";\n    else if (h >= 17 && h <= 24) greet = \"Good Evening!\";\n    return greet;\n  };\n\n  //INFO: clock\n  const [time, setTime] = useState(new Date().toLocaleTimeString(\"en-US\"));\n  const updateTime = () => {\n    setTime(new Date().toLocaleTimeString(\"en-US\"));\n  };\n  setInterval(updateTime, 1000);\n\n  //INFO: get lat long\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n\n  const locSucess = (pos) => {\n    setLat(pos.coords.latitude);\n    setLon(pos.coords.longitude);\n    // console.log(pos);\n  };\n\n  let locErr = (err) => {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  };\n\n  const opp = {\n    enableHighAccuracy: true,\n    timeout: 5000,\n    maximumAge: 0,\n  };\n  navigator.geolocation.getCurrentPosition(locSucess, locErr, opp);\n\n  //INFO: get loc[cityName countryCode]\n  const [cityName, setCityName] = useState(\"\");\n  const [countryCode, setCountryCode] = useState(\"\");\n  const [cityCountryErr, setCityCountryErr] = useState(\"\");\n\n  const bdcApi = `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lon}`;\n  const getCityCountry = async () => {\n    try {\n      const res = await axios.get(bdcApi);\n      console.log(res.data);\n      return res.data;\n    } catch (e) {\n      setCityCountryErr(e.message);\n      console.log(cityCountryErr);\n    }\n  };\n\n  //INFO: get weather data\n  const apiKey = \"44f8f3e9badd63673a1dc623c416a439\";\n  // const URL = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\n\n  const [weather, setWeather] = useState(\"\");\n  const [weatherErr, setWeatherErr] = useState(\"\");\n\n  const getWeather = async () => {\n    try {\n      const location = await getCityCountry();\n      setCityName(location.city);\n      setCountryCode(location.countryCode);\n      const URL = `https://api.openweathermap.org/data/2.5/weather?q=${location.city},${location.countryCode}&appid=${apiKey}&units=metric`;\n      const res = await axios.get(URL);\n      setWeather(res.data);\n      console.log(res.data);\n    } catch (e) {\n      setWeatherErr(e.message);\n      console.log(weatherErr);\n    }\n  };\n\n  useEffect(() => {\n    getWeather();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [h]);\n\n\n  return (\n    <>\n      <NavBar tab=\"home\" />\n      <div className=\"center-alng\">\n        <h1 className=\"greet\">{greetings()}</h1>\n        <h3>{`[  ${time}  ]`}</h3>\n        <div className=\"card\">\n          <h2 className=\"city\">\n            Weather in {cityName}, {countryCode}\n          </h2>\n          {weather.main !== undefined && (\n            <h1 className=\"temp\">{weather.main.temp}Â°C</h1>\n          )}\n          <div className=\"flex\">\n            {weather.weather !== undefined && (\n              <img\n                src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                alt=\"\"\n                className=\"icon\"\n              />\n            )}\n            {weather.weather !== undefined && (\n              <div className=\"description\">\n                {weather.weather[0].description}\n              </div>\n            )}\n          </div>\n          {weather.main !== undefined && (\n            <div className=\"extra\">Humidity: {weather.main.humidity}%</div>\n          )}\n          {weather.wind !== undefined && (\n            <div className=\"extra\">Wind speed: {weather.wind.speed} km/h</div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"yZAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAOC,OAAM,KAAM,UAAU,CAC7B,MAAOC,MAAK,KAAM,OAAO,CAEzB;AACA;AAAA,6IAEA,cAAe,SAASC,SAAQ,EAAG,CACjC;AACA,GAAIC,EAAC,CAAG,GAAIC,KAAI,EAAE,CAACC,QAAQ,EAAE,CAC7B,GAAIC,UAAS,CAAG,QAAZA,UAAS,EAAS,CACpB,GAAIC,MAAK,CAAG,EAAE,CACd,GAAIJ,CAAC,CAAG,EAAE,CAAEI,KAAK,CAAG,eAAe,CAAC,IAC/B,IAAIJ,CAAC,EAAI,EAAE,EAAIA,CAAC,EAAI,EAAE,CAAEI,KAAK,CAAG,iBAAiB,CAAC,IAClD,IAAIJ,CAAC,EAAI,EAAE,EAAIA,CAAC,EAAI,EAAE,CAAEI,KAAK,CAAG,eAAe,CACpD,MAAOA,MAAK,CACd,CAAC,CAED;AACA,cAAwBT,QAAQ,CAAC,GAAIM,KAAI,EAAE,CAACI,kBAAkB,CAAC,OAAO,CAAC,CAAC,wCAAjEC,IAAI,eAAEC,OAAO,eACpB,GAAMC,WAAU,CAAG,QAAbA,WAAU,EAAS,CACvBD,OAAO,CAAC,GAAIN,KAAI,EAAE,CAACI,kBAAkB,CAAC,OAAO,CAAC,CAAC,CACjD,CAAC,CACDI,WAAW,CAACD,UAAU,CAAE,IAAI,CAAC,CAE7B;AACA,eAAsBb,QAAQ,CAAC,EAAE,CAAC,yCAA3Be,GAAG,eAAEC,MAAM,eAClB,eAAsBhB,QAAQ,CAAC,EAAE,CAAC,yCAA3BiB,GAAG,eAAEC,MAAM,eAElB,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,GAAG,CAAK,CACzBJ,MAAM,CAACI,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC,CAC3BJ,MAAM,CAACE,GAAG,CAACC,MAAM,CAACE,SAAS,CAAC,CAC5B;AACF,CAAC,CAED,GAAIC,OAAM,CAAG,QAATA,OAAM,CAAIC,GAAG,CAAK,CACpBC,OAAO,CAACC,IAAI,iBAAUF,GAAG,CAACG,IAAI,eAAMH,GAAG,CAACI,OAAO,EAAG,CACpD,CAAC,CAED,GAAMC,IAAG,CAAG,CACVC,kBAAkB,CAAE,IAAI,CACxBC,OAAO,CAAE,IAAI,CACbC,UAAU,CAAE,CACd,CAAC,CACDC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACjB,SAAS,CAAEK,MAAM,CAAEM,GAAG,CAAC,CAEhE;AACA,eAAgC9B,QAAQ,CAAC,EAAE,CAAC,yCAArCqC,QAAQ,eAAEC,WAAW,eAC5B,eAAsCtC,QAAQ,CAAC,EAAE,CAAC,0CAA3CuC,WAAW,gBAAEC,cAAc,gBAClC,gBAA4CxC,QAAQ,CAAC,EAAE,CAAC,2CAAjDyC,cAAc,gBAAEC,iBAAiB,gBAExC,GAAMC,OAAM,6EAAwE5B,GAAG,uBAAcE,GAAG,CAAE,CAC1G,GAAM2B,eAAc,4FAAG,kLAEDzC,MAAK,CAAC0C,GAAG,CAACF,MAAM,CAAC,QAA7BG,GAAG,eACTpB,OAAO,CAACqB,GAAG,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,gCACfF,GAAG,CAACE,IAAI,0DAEfN,iBAAiB,CAAC,YAAEb,OAAO,CAAC,CAC5BH,OAAO,CAACqB,GAAG,CAACN,cAAc,CAAC,CAAC,mEAE/B,kBATKG,eAAc,0CASnB,CAED;AACA,GAAMK,OAAM,CAAG,kCAAkC,CACjD;AAEA,gBAA8BjD,QAAQ,CAAC,EAAE,CAAC,2CAAnCkD,OAAO,gBAAEC,UAAU,gBAC1B,gBAAoCnD,QAAQ,CAAC,EAAE,CAAC,2CAAzCoD,UAAU,gBAAEC,aAAa,gBAEhC,GAAMC,WAAU,6FAAG,sMAEQV,eAAc,EAAE,QAAjCW,QAAQ,gBACdjB,WAAW,CAACiB,QAAQ,CAACC,IAAI,CAAC,CAC1BhB,cAAc,CAACe,QAAQ,CAAChB,WAAW,CAAC,CAC9BkB,GAAG,6DAAwDF,QAAQ,CAACC,IAAI,aAAID,QAAQ,CAAChB,WAAW,mBAAUU,MAAM,yCACpG9C,MAAK,CAAC0C,GAAG,CAACY,GAAG,CAAC,QAA1BX,GAAG,gBACTK,UAAU,CAACL,GAAG,CAACE,IAAI,CAAC,CACpBtB,OAAO,CAACqB,GAAG,CAACD,GAAG,CAACE,IAAI,CAAC,CAAC,qFAEtBK,aAAa,CAAC,aAAExB,OAAO,CAAC,CACxBH,OAAO,CAACqB,GAAG,CAACK,UAAU,CAAC,CAAC,sEAE3B,kBAbKE,WAAU,2CAaf,CAEDrD,SAAS,CAAC,UAAM,CACdqD,UAAU,EAAE,CACd;AACA,CAAC,CAAE,CAACjD,CAAC,CAAC,CAAC,CAGP,mBACE,wCACE,KAAC,MAAM,EAAC,GAAG,CAAC,MAAM,EAAG,cACrB,aAAK,SAAS,CAAC,aAAa,wBAC1B,WAAI,SAAS,CAAC,OAAO,UAAEG,SAAS,EAAE,EAAM,cACxC,iCAAWG,IAAI,SAAW,cAC1B,aAAK,SAAS,CAAC,MAAM,wBACnB,YAAI,SAAS,CAAC,MAAM,WAAC,aACR,CAAC0B,QAAQ,CAAC,IAAE,CAACE,WAAW,GAChC,CACJW,OAAO,CAACQ,IAAI,GAAKC,SAAS,eACzB,YAAI,SAAS,CAAC,MAAM,WAAET,OAAO,CAACQ,IAAI,CAACE,IAAI,CAAC,OAAE,GAC3C,cACD,aAAK,SAAS,CAAC,MAAM,WAClBV,OAAO,CAACA,OAAO,GAAKS,SAAS,eAC5B,YACE,GAAG,6CAAuCT,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACW,IAAI,QAAO,CACxE,GAAG,CAAC,EAAE,CACN,SAAS,CAAC,MAAM,EAEnB,CACAX,OAAO,CAACA,OAAO,GAAKS,SAAS,eAC5B,YAAK,SAAS,CAAC,aAAa,UACzBT,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACY,WAAW,EAElC,GACG,CACLZ,OAAO,CAACQ,IAAI,GAAKC,SAAS,eACzB,aAAK,SAAS,CAAC,OAAO,WAAC,YAAU,CAACT,OAAO,CAACQ,IAAI,CAACK,QAAQ,CAAC,GAAC,GAC1D,CACAb,OAAO,CAACc,IAAI,GAAKL,SAAS,eACzB,aAAK,SAAS,CAAC,OAAO,WAAC,cAAY,CAACT,OAAO,CAACc,IAAI,CAACC,KAAK,CAAC,OAAK,GAC7D,GACG,GACF,GACL,CAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}