{"ast":null,"code":"var _jsxFileName = \"/Users/snehasis/Documents/MYF/react/easy-util/src/components/BinaryConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BinaryConverter() {\n  _s();\n  const handleChange = event => {\n    let dec = parseInt(event.target.value, 10);\n    if (isNaN(dec)) {\n      event.target.value = null;\n    }\n    setNum(dec);\n    if (isNaN(dec)) {\n      setNum(0);\n    }\n    // console.log(typeof(num));\n  };\n\n  const handleBinClick = () => {\n    // console.log(\"clicked\");\n\n    setBin(num.toString(2));\n    // setBin(decToBin(num));\n    // console.log(decToBin(num));\n  };\n  //convert to decimal function\n  // function decToBin(n){\n  //     let r=0;\n  //     let ctr=0;\n  //     while (n>0){\n  //         r=r+((n%2)*(10**ctr));\n  //         ctr=ctr+1;\n  //         n=Math.floor(n/2);\n  //     }\n  //     return r\n  // };\n\n  const [num, setNum] = useState(0);\n  const [bin, setBin] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      tab: \"bin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-alng\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DECIMAL TO BINARY CONVERTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-alng\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        inputMode: \"numeric\",\n        className: \"input\",\n        placeholder: \"enter decimal number only\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-alng\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleBinClick,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Convert to Binary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"results\",\n        children: [\"Decimal: \", num]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"results\",\n        children: [\"Binary: \", bin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(BinaryConverter, \"QYnjXPrM68bvc/PWyuf2ktu3NLo=\");\n_c = BinaryConverter;\nvar _c;\n$RefreshReg$(_c, \"BinaryConverter\");","map":{"version":3,"names":["React","useState","NavBar","BinaryConverter","handleChange","event","dec","parseInt","target","value","isNaN","setNum","handleBinClick","setBin","num","toString","bin"],"sources":["/Users/snehasis/Documents/MYF/react/easy-util/src/components/BinaryConverter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\n\nexport default function BinaryConverter() {\n    const handleChange = (event) => {\n        let dec = parseInt(event.target.value, 10);\n        if (isNaN(dec)) {\n            event.target.value = null;\n        }\n\n        setNum(dec);\n\n        if (isNaN(dec)) {\n            setNum(0);\n        }\n        // console.log(typeof(num));\n    };\n\n    const handleBinClick = () => {\n        // console.log(\"clicked\");\n\n        setBin(num.toString(2));\n        // setBin(decToBin(num));\n        // console.log(decToBin(num));\n    };\n    //convert to decimal function\n    // function decToBin(n){\n    //     let r=0;\n    //     let ctr=0;\n    //     while (n>0){\n    //         r=r+((n%2)*(10**ctr));\n    //         ctr=ctr+1;\n    //         n=Math.floor(n/2);\n    //     }\n    //     return r\n    // };\n\n    const [num, setNum] = useState(0);\n    const [bin, setBin] = useState(0);\n\n    return (\n        <>\n            <NavBar tab=\"bin\" />\n            <div className=\"center-alng\">\n                <h2>DECIMAL TO BINARY CONVERTER</h2>\n            </div>\n            <div className=\"center-alng\">\n                <input\n                    type=\"text\"\n                    inputMode=\"numeric\"\n                    className=\"input\"\n                    placeholder=\"enter decimal number only\"\n                    onChange={handleChange}\n                />\n            </div>\n            <div className=\"center-alng\">\n                <button className=\"button\" onClick={handleBinClick}>\n                    <b>Convert to Binary</b>\n                </button>\n                <h3 id=\"results\">Decimal: {num}</h3>\n                <h3 id=\"results\">Binary: {bin}</h3>\n            </div>\n        </>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAAC;AAAA;AAE9B,eAAe,SAASC,eAAe,GAAG;EAAA;EACtC,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAIC,GAAG,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC;IAC1C,IAAIC,KAAK,CAACJ,GAAG,CAAC,EAAE;MACZD,KAAK,CAACG,MAAM,CAACC,KAAK,GAAG,IAAI;IAC7B;IAEAE,MAAM,CAACL,GAAG,CAAC;IAEX,IAAII,KAAK,CAACJ,GAAG,CAAC,EAAE;MACZK,MAAM,CAAC,CAAC,CAAC;IACb;IACA;EACJ,CAAC;;EAED,MAAMC,cAAc,GAAG,MAAM;IACzB;;IAEAC,MAAM,CAACC,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvB;IACA;EACJ,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACD,GAAG,EAAEH,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACe,GAAG,EAAEH,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjC,oBACI;IAAA,wBACI,QAAC,MAAM;MAAC,GAAG,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACpB;MAAK,SAAS,EAAC,aAAa;MAAA,uBACxB;QAAA,UAAI;MAA2B;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAClC,eACN;MAAK,SAAS,EAAC,aAAa;MAAA,uBACxB;QACI,IAAI,EAAC,MAAM;QACX,SAAS,EAAC,SAAS;QACnB,SAAS,EAAC,OAAO;QACjB,WAAW,EAAC,2BAA2B;QACvC,QAAQ,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA;IACzB;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,aAAa;MAAA,wBACxB;QAAQ,SAAS,EAAC,QAAQ;QAAC,OAAO,EAAEQ,cAAe;QAAA,uBAC/C;UAAA,UAAG;QAAiB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACnB,eACT;QAAI,EAAE,EAAC,SAAS;QAAA,WAAC,WAAS,EAACE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACpC;QAAI,EAAE,EAAC,SAAS;QAAA,WAAC,UAAQ,EAACE,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA,gBACP;AAEX;AAAC,GA7DuBb,eAAe;AAAA,KAAfA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}